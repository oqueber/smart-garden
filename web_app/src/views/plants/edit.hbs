
{{#if Type}}
  <form name="myForm" id="myForm" action="/new-plant/{{Type}}/{{index}}/save" method="POST" class="col s12">
{{else}}  
  <form name="myForm" id="myForm" action="/edit-plant/{{index}}/save" method="POST" class="col s12" >
{{/if}}

  <h4>Valores recomendados para <span id="PlantName">{{plant.info.name}}</span> :</h4>

  <!-- One "tab" for each step in the form: -->
  <div class="tab blue white-text">
    <h4>Tipo de iluminación</h4>
    <div class="row">
      <div class="col s12">
        <div id="colorpicker">
          <div class="sliders" id="red"></div>
          <div class="sliders" id="green"></div>
          <div class="sliders" id="blue"></div>
          <div id="result"></div>
          <div id="resultados">
            <p id="resultados_R">100%</p>
            <p id="resultados_G">100%</p>
            <p id="resultados_B">100%</p>
          </div>
        </div> 
      </div>
    </div>
  </div>

  <div class="tab amber white-text">
    <h4>Configuración para la iluminación</h4>
      <div class="row">
        <div class="col s12">
          <div class="col s6">
            <p>Empieza a las: </p>
          </div>  
          <div class="col s6">
            <input id="time_start" type="time" name="time_start" value="13:30">
          </div>
        </div>
        <div class="col s12">
          <div class="col s6">
            <p>Termina a las: </p>
          </div>  
          <div class="col s6">
            <input id="time_stop" type="time" name="time_stop" value="13:30">
          </div>
        </div>
      </div>
      <div class="row">
        <div class="input-field col s6">
          <input placeholder="Led start" id="led_start" name="led_start" type="number" class="validate">
          <label for="led_start">Inicio de area LED</label>
        </div>
        <div class="input-field col s6">
          <input placeholder="Led end" id="led_end" name="led_end" type="number" class="validate">
          <label for="led_end">Fin de area LED </label>
        </div>
      </div>
  </div>

  <div class="tab green white-text">
    <h4>Riego</h4>
    <div class="row">
      <div class="input-field col s12">
        <p>Frecuencia de riego: <span id="valueSpanFreq"></span></p>
        <div id="waterF"></div>
      </div>
      <div class="input-field col s12">
          <p>Limite de riego: <span id="valueSpanWater"></span></p>
          <div id="waterU"></div>
      </div>
      <div class="input-field col s4">
        <input placeholder="Water pin" id="waterPin" name="waterPin" type="number" class="validate">
        <label for="waterPin">Pin de riego</label>
      </div>
      <div class="input-field col s4">
        <input placeholder="Position open" id="waterOpen" name="waterOpen" type="number" class="validate">
        <label for="waterOpen">Positión de abierto</label>
      </div>
      <div class="input-field col s4">
        <input placeholder="Position close" id="waterClose" name="waterClose" type="number" class="validate">
        <label for="waterClose">Positión de cerrado</label>
      </div>
    </div>
  </div>

  <div class="tab blue white-text">
      <h4>Sensores</h4>
      <div class="row">
        <div class="col s4">
          <div class="input-field col s12">
            <input placeholder="photocell1" id="adc1" name="adc1" type="number" class="validate">
            <label for="adc1">Fotorresistor 1</label>
          </div>
          <div class="input-field col s12">
            <input placeholder="photocell2" id="adc2" name="adc2" type="number" class="validate">
            <label for="adc2">Fotorresistor 2</label>
          </div>
        </div>
        <div class="col s4">
          <div class="plant">
            <div class="scan1" id="scan1" ></div>
            <div class="scan2" id="scan2" ></div>
            <img class="sheet" src="/img/plant2.svg" alt="svg image plant" />
          </div>
        </div>
        <div class="col s4">
          <div class="input-field col s12">
            <input placeholder="HumCap" id="adc3" name="adc3" type="number" class="validate">
            <label for="adc3">Humedad Capacitiva</label>
          </div>

          <div class="input-field col s12">
            <input placeholder="HumEC" id="adc4" name="adc4" type="number" class="validate">
            <label for="adc4">Humedad Conductiva</label>
          </div>
        </div>
      </div>
  </div>

  <!-- Circles which indicates the steps of the form: -->
  <div style="text-align:center;margin-top:-20px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>

  <div style="overflow:auto;">
    <div style="text-align: center;padding: 10px;">
                 
      <a href="/my-plants" class="btn btn-primary">Cancel</a>
      {{#if Type}}
      {{else}}  
        <a href="/delete-plant/{{date}}" class="btn red">Delente</a>
        <a href="/act/{{date}}" class="btn purple">action</a>
      {{/if}}

      <button class="btn grey" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button class="btn green" type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
      <button style="display:none" id="submit" type="submit" class="btn green">Save</button>
    </div>
  </div>


</form>

<script src="/js/nouislider.js"></script>
<script src="/js/tools.js"></script>
<script src="/js/plantEditForm.js"></script> 
<script>
  const umbralLux = ["Sin luz", "poca luz", "en sombra", "Luz directa"];
  const umbralWater = ["Seco", "Poco Humedo", "Humedo", "Encharcado"];
  const localPlant =  {{{JSON2string plant}}} ;

  var currentTab = 0; // Current tab is set to be the first tab (0)
  showTab(currentTab); // Display the current tab

  function showTab(n) {
    // This function will display the specified tab of the form ...
    var x = document.getElementsByClassName("tab");
    x[n].style.display = "block";
    // ... and fix the Previous/Next buttons:
    if (n == 0) {
      document.getElementById("prevBtn").style.display = "none";
    } else {
      document.getElementById("prevBtn").style.display = "inline";
    }
    if (n == (x.length - 1)) {
      document.getElementById("submit").style.display = "inline";
      document.getElementById("nextBtn").style.display = "none";
    } else {
      document.getElementById("submit").style.display = "none";
      document.getElementById("nextBtn").style.display = "inline";
    }
    // ... and run a function that displays the correct step indicator:
    fixStepIndicator(n)
  }

  function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("tab");
    // Exit the function if any field in the current tab is invalid:
    //if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form... :
    //if (currentTab >= x.length) {
      //...the form gets submitted:
      //document.getElementById('myForm').submit(); 
      //return false;
      //console.log("bye")
    //}
    // Otherwise, display the correct tab:
    showTab(currentTab);
  }

  function validateForm() {
    // This function deals with validation of the form fields
    var x, y, i, valid = true;
    x = document.getElementsByClassName("tab");
    y = x[currentTab].getElementsByTagName("input");
    // A loop that checks every input field in the current tab:
    for (i = 0; i < y.length; i++) {
      // If a field is empty...
      if (y[i].value == "") {
        // add an "invalid" class to the field:
        y[i].className += " invalid";
        // and set the current valid status to false:
        valid = false;
      }
    }
    // If the valid status is true, mark the step as finished and valid:
    if (valid) {
      document.getElementsByClassName("step")[currentTab].className += " finish";
    }
    return valid; // return the valid status
  }

  function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i, x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
      x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class to the current step:
    x[n].className += " active";
  }

  $( document ).ready(function() {


    if(localPlant.pinout){
      document.getElementById("adc1").value = localPlant.pinout.photocell1;
      document.getElementById("adc2").value = localPlant.pinout.photocell2;
      document.getElementById("adc3").value = localPlant.pinout.humCap;
      document.getElementById("adc4").value = localPlant.pinout.humEC;

      document.getElementById("led_start").value = localPlant.sowing.light.led_start;
      document.getElementById("led_end").value =   localPlant.sowing.light.led_end;
      document.getElementById("time_start").value =  localPlant.sowing.light.time_start;
      document.getElementById("time_stop").value =   localPlant.sowing.light.time_stop;
      document.getElementById("waterPin").value =   localPlant.sowing.water.pinout;
      document.getElementById("waterOpen").value =   localPlant.sowing.water.open;
      document.getElementById("waterClose").value =   localPlant.sowing.water.close;

      const red = document.getElementById("red");
      red.noUiSlider.set(localPlant.sowing.light.color_red ); 
      const green = document.getElementById("green");
      green.noUiSlider.set(localPlant.sowing.light.color_green ); 
      const blue = document.getElementById("blue");
      blue.noUiSlider.set( localPlant.sowing.light.color_blue ); 
    }


    const valueSliderFreq = document.getElementById("waterF");
    valueSliderFreq.noUiSlider.set(localPlant.sowing.water.frequency); 

    //const valueSliderLux = document.getElementById("lightH");
    //valueSliderLux.noUiSlider.set(localPlant.sowing.light.hours);

    const valueSliderWater = document.getElementById("waterU");
    valueSliderWater.noUiSlider.set(localPlant.sowing.water.limit);

    const valueSpanFreq = document.getElementById('valueSpanFreq');
    valueSpanFreq.textContent = `cada ${ localPlant.sowing.water.frequency } dias`;

    let valueSpanWater = document.getElementById('valueSpanWater');
    valueSpanWater.textContent = `${umbralWater[ localPlant.sowing.water.limit ]}`;

    //let valueSpanLux = document.getElementById('valueSpanLux');
    //valueSpanLux.textContent = `${ localPlant.sowing.light.hours } horas diarias`;

    valueSliderFreq.noUiSlider.on('change.one', (values) => {
        valueSpanFreq.textContent = `cada ${parseInt(values[0],10)} dias`;
    });

    valueSliderWater.noUiSlider.on('change.one', (values) => {
        valueSpanWater.textContent = `${umbralWater[parseInt(values[0],10)]}`;
    });

    //valueSliderLux.noUiSlider.on('change.one', (values) => {
    //    valueSpanLux.textContent = `${parseInt(values[0],10)} horas diarias`;
    //});

    document.getElementById("colorpicker").addEventListener('click', (values) => {
        document.getElementById("scan2").style.boxShadow = `inset -5px -30px 20px rgb(${colors[0]},${colors[1]},${colors[2]})`;
        document.getElementById("scan1").style.boxShadow = `inset -1px 10px 100px rgb(${colors[0]},${colors[1]},${colors[2]})`;
        
        document.getElementById("resultados_R"). = `R: ${colors[0]}%`;
        document.getElementById("resultados_G"). = `R: ${colors[1]}%`;
        document.getElementById("resultados_B"). = `R: ${colors[2]}%`;
    });

});
</script>
